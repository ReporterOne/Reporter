"""reasons_consts_added

Revision ID: 914fd311505e
Revises: bc44eb18ae9a
Create Date: 2020-01-05 10:44:09.953968

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '914fd311505e'
down_revision = 'bc44eb18ae9a'
branch_labels = None
depends_on = None


def upgrade():
    """commands auto generated by Alembic - please adjust!"""
    op.create_unique_constraint(None, 'date_datas', ['id'])
    op.alter_column('date_details', 'type',
                    existing_type=postgresql.ENUM('required',
                        'not_required', 'not_important', name='date_type'),
                    type_=sa.Enum('required', 'not_required', 'unknown',
                                  name='date_type'),
                    existing_nullable=True)
    op.create_unique_constraint(None, 'permissions', ['id'])
    op.create_unique_constraint(None, 'reasons', ['id'])
    op.create_unique_constraint(None, 'repetative_datas', ['id'])
    op.create_unique_constraint(None, 'users', ['id'])
    # ### end Alembic commands ###


def downgrade():
    """commands auto generated by Alembic - please adjust!"""
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_constraint(None, 'repetative_datas', type_='unique')
    op.drop_constraint(None, 'reasons', type_='unique')
    op.drop_constraint(None, 'permissions', type_='unique')
    op.alter_column('date_details', 'type',
                    existing_type=sa.Enum('required',
                        'not_required', 'unknown', name='date_type'),
                    type_=postgresql.ENUM('required',
                        'not_required', 'not_important', name='date_type'),
                    existing_nullable=True)
    op.drop_constraint(None, 'date_datas', type_='unique')
    # ### end Alembic commands ###
