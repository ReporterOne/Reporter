"""baseline

Revision ID: 095f9541966a
Revises:
Create Date: 2019-12-20 18:46:04.149995

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '095f9541966a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('date_details',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('date', sa.Date(), nullable=True),
                    sa.Column('type', sa.Enum('required', 'not_required',
                                              'not_important',
                                              name='date_type'),
                              nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_date_details_date'), 'date_details', ['date'],
                    unique=True)
    op.create_table('madors',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('name')
                    )
    op.create_table('permissions',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('type', sa.String(), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('id')
                    )
    reasons_table = op.create_table('reasons',
                                    sa.Column('id', sa.Integer(),
                                              nullable=False),
                                    sa.Column('name', sa.String(),
                                              nullable=True),
                                    sa.PrimaryKeyConstraint('id'),
                                    sa.UniqueConstraint('id')
                                    )
    op.create_table('settings',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('key', sa.String(), nullable=True),
                    sa.Column('value', sa.String(), nullable=True),
                    sa.Column('type',
                              sa.Enum('int', 'str', 'bool', 'time', 'date',
                                      name='types'), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('mador_settings',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('mador_name', sa.String(), nullable=True),
                    sa.Column('key', sa.String(), nullable=True),
                    sa.Column('value', sa.String(), nullable=True),
                    sa.Column('type',
                              sa.Enum('int', 'str', 'bool', 'time', 'date',
                                      name='types'), nullable=False),
                    sa.ForeignKeyConstraint(['mador_name'], ['madors.name'],
                                            ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_mador_settings_mador_name'), 'mador_settings',
                    ['mador_name'], unique=False)
    op.create_table('users',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('icon_path', sa.String(), nullable=True),
                    sa.Column('commander_id', sa.Integer(), nullable=True),
                    sa.Column('reminder_time', postgresql.TIME(),
                              nullable=True),
                    sa.Column('last_reminded_date', sa.Date(), nullable=True),
                    sa.Column('english_name', sa.String(), nullable=True),
                    sa.Column('type', sa.Enum('facebook', 'google', 'local',
                                              name='user_type'),
                              nullable=True),
                    sa.Column('username', sa.String(), nullable=True),
                    sa.Column('password', sa.String(), nullable=True),
                    sa.Column('mador_name', sa.String(), nullable=True),
                    sa.Column('manages_mador_name', sa.String(),
                              nullable=True),
                    sa.ForeignKeyConstraint(['commander_id'], ['users.id'],
                                            ondelete='SET NULL'),
                    sa.ForeignKeyConstraint(['mador_name'], ['madors.name'],
                                            ondelete='SET NULL'),
                    sa.ForeignKeyConstraint(['manages_mador_name'],
                                            ['madors.name'],
                                            ondelete='SET NULL'),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('id'),
                    sa.UniqueConstraint('manages_mador_name')
                    )
    op.create_index(op.f('ix_users_commander_id'), 'users', ['commander_id'],
                    unique=False)
    op.create_index(op.f('ix_users_mador_name'), 'users', ['mador_name'],
                    unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'],
                    unique=True)
    op.create_table('date_datas',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('date', sa.Date(), nullable=True),
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.Column('state',
                              sa.Enum('here', 'not_here', name='answer_state'),
                              nullable=True),
                    sa.Column('reason_id', sa.Integer(), nullable=True),
                    sa.Column('reported_by_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['date'], ['date_details.date'],
                                            ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(['reason_id'], ['reasons.id'], ),
                    sa.ForeignKeyConstraint(['reported_by_id'], ['users.id'],
                                            ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'],
                                            ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('id')
                    )
    op.create_index(op.f('ix_date_datas_date'), 'date_datas', ['date'],
                    unique=False)
    op.create_index(op.f('ix_date_datas_reason_id'), 'date_datas',
                    ['reason_id'], unique=False)
    op.create_index(op.f('ix_date_datas_reported_by_id'), 'date_datas',
                    ['reported_by_id'], unique=False)
    op.create_index(op.f('ix_date_datas_user_id'), 'date_datas', ['user_id'],
                    unique=False)
    op.create_table('operators_map',
                    sa.Column('mador_id', sa.Integer(), nullable=True),
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['mador_id'], ['madors.id'],
                                            ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'],
                                            ondelete='CASCADE')
                    )
    op.create_index(op.f('ix_operators_map_mador_id'), 'operators_map',
                    ['mador_id'], unique=False)
    op.create_index(op.f('ix_operators_map_user_id'), 'operators_map',
                    ['user_id'], unique=False)
    op.create_table('permissions_map',
                    sa.Column('permission_id', sa.Integer(), nullable=True),
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['permission_id'],
                                            ['permissions.id'],
                                            ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'],
                                            ondelete='CASCADE')
                    )
    op.create_index(op.f('ix_permissions_map_permission_id'),
                    'permissions_map', ['permission_id'], unique=False)
    op.create_index(op.f('ix_permissions_map_user_id'), 'permissions_map',
                    ['user_id'], unique=False)
    op.create_table('repetative_datas',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.Column('from_date_id', sa.Integer(), nullable=True),
                    sa.Column('to_date_id', sa.Integer(), nullable=True),
                    sa.Column('every', sa.Integer(), nullable=True),
                    sa.Column('reason_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['from_date_id'],
                                            ['date_details.id'],
                                            ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(['reason_id'], ['reasons.id'], ),
                    sa.ForeignKeyConstraint(['to_date_id'],
                                            ['date_details.id'],
                                            ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'],
                                            ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('id')
                    )
    op.create_index(op.f('ix_repetative_datas_from_date_id'),
                    'repetative_datas', ['from_date_id'], unique=False)
    op.create_index(op.f('ix_repetative_datas_reason_id'), 'repetative_datas',
                    ['reason_id'], unique=False)
    op.create_index(op.f('ix_repetative_datas_to_date_id'), 'repetative_datas',
                    ['to_date_id'], unique=False)
    op.create_index(op.f('ix_repetative_datas_user_id'), 'repetative_datas',
                    ['user_id'], unique=False)
    # ### end Alembic commands ###

    op.bulk_insert(
        reasons_table,
        [
            {"name": "בחופשת לידה"},
            {"name": "חופש"},
            {"name": "חול"},
        ]
    )


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_repetative_datas_user_id'),
                  table_name='repetative_datas')
    op.drop_index(op.f('ix_repetative_datas_to_date_id'),
                  table_name='repetative_datas')
    op.drop_index(op.f('ix_repetative_datas_reason_id'),
                  table_name='repetative_datas')
    op.drop_index(op.f('ix_repetative_datas_from_date_id'),
                  table_name='repetative_datas')
    op.drop_table('repetative_datas')
    op.drop_index(op.f('ix_permissions_map_user_id'),
                  table_name='permissions_map')
    op.drop_index(op.f('ix_permissions_map_permission_id'),
                  table_name='permissions_map')
    op.drop_table('permissions_map')
    op.drop_index(op.f('ix_operators_map_user_id'), table_name='operators_map')
    op.drop_index(op.f('ix_operators_map_mador_id'),
                  table_name='operators_map')
    op.drop_table('operators_map')
    op.drop_index(op.f('ix_date_datas_user_id'), table_name='date_datas')
    op.drop_index(op.f('ix_date_datas_reported_by_id'),
                  table_name='date_datas')
    op.drop_index(op.f('ix_date_datas_reason_id'), table_name='date_datas')
    op.drop_index(op.f('ix_date_datas_date'), table_name='date_datas')
    op.drop_table('date_datas')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_mador_name'), table_name='users')
    op.drop_index(op.f('ix_users_commander_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_mador_settings_mador_name'),
                  table_name='mador_settings')
    op.drop_table('mador_settings')
    op.drop_table('settings')
    op.drop_table('reasons')
    op.drop_table('permissions')
    op.drop_table('madors')
    op.drop_index(op.f('ix_date_details_date'), table_name='date_details')
    op.drop_table('date_details')
    # ### end Alembic commands ###
