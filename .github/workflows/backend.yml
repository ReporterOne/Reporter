name: Backend

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache pip install
      uses: actions/cache@v1
      env:
        cache-name: cache-pip
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/Pipfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
        pipenv lock --requirements > requirements.txt
        pipenv lock --dev --requirements > dev-requirements.txt
        pip install -r requirements.txt
        pip install -r dev-requirements.txt
    - name: Lint with flake8
      env:
        PYTHONPATH: app/backend/
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 app/backend
    - name: Lint with pylint
      env:
        PYTHONPATH: app/backend/
      run: |
        pylint app/backend/ -E

    - name: Pytest
      env:
        PYTHONPATH: app/backend/
        ONE_REPORT_MODE: TEST
      run: |
        pip install pytest pytest-cov
        pytest --cov=app/backend/ --cov-report=xml tests/backend

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: server_tests
