name: End-to-end tests
on: [push]
jobs:
  cypress-run:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7]

    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: one_report
          POSTGRES_PASSWORD: one_report
          POSTGRES_DB: one_report
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Cache node modules
          uses: actions/cache@v1
          env:
            cache-name: cache-node-modules
          with:
            path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
            key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
            restore-keys: |
              ${{ runner.os }}-build-${{ env.cache-name }}-
              ${{ runner.os }}-build-
              ${{ runner.os }}-
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip install
          uses: actions/cache@v1
          env:
            cache-name: cache-pip
          with:
            path: ~/.cache/pip
            key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/Pipfie.lock') }}
            restore-keys: |
              ${{ runner.os }}-build-${{ env.cache-name }}-
              ${{ runner.os }}-build-
              ${{ runner.os }}-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv lock --requirements > requirements.txt
          pip install -r requirements.txt
      - name: Run Migrations
        run: |
          alembic upgrade head
        env:
          PYTHONPATH: app/backend/
      - name: Cypress run
        uses: cypress-io/github-action@v1
        with:
          record: true
          parallel: true
          build: npm run build:ci
          start: npm run start:backend
          wait-on: http://localhost:8443
          group: 'Integration'
        env:
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          PYTHONPATH: app/backend/
